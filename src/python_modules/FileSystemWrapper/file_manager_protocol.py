from typing import Protocol
from .path_wrapper import PathWrapper


class FileManagerProtocol(Protocol):
    """Protocol to manage all the file R/W operations"""

    def mkdir_if_not_exists(self, path_wrapper: PathWrapper) -> None: ...

    def get_children(self, path_wrapper: PathWrapper) -> list[PathWrapper]: ...

    def path_exists(self, path_wrapper: PathWrapper) -> bool: ...

    def path_is_dir(self, path_wrapper: PathWrapper) -> bool: ...

    def write_file(self, path_wrapper: PathWrapper, text: str) -> None: ...

    def read_file(self, path_wrapper: PathWrapper) -> str: ...

    def rename_path(self, path_wrapper: PathWrapper, new_path: PathWrapper) -> None: ...

    def unlink_path(self, path_wrapper: PathWrapper) -> None: ...
